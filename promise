<script>
    function helloWorld(ready) {
        return new Promise(function (resolve, reject) {
            if (ready) {
                resolve("Hello World!");
            } else {
                reject("Good bye!");
            }
        });
    }

    helloWorld(false).then(function (message) {
        alert(message);
    }, function (error) {
        alert(error);
    });
    helloWorld(false).then(function (result) {
        console.log('成功：' + result);
    }).catch(function (reason) {
        console.log('失败：' + reason);
    });

    var p1 = new Promise(function (resolve, reject) {
        setTimeout(resolve, 500, 'P1');
    });
    var p2 = new Promise(function (resolve, reject) {
        setTimeout(resolve, 600, 'P2');
    });
    //由于p1执行较快，Promise的then()将获得结果'P1'。p2仍在继续执行，但执行结果将被丢弃。
    Promise.race([p1, p2]).then(function (result) {
        console.log(result); // 'P1'
    });
    // 同时执行p1和p2，并在它们都完成后执行then:
    Promise.all([p1, p2]).then(function (results) {
        console.log(results); // 获得一个Array: ['P1', 'P2']
    });
</script>
